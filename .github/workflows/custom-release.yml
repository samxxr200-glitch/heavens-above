name: Custom Release Workflow

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release-prep:
    name: Release Preparation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run pre-release tests
      run: npm test
    
    - name: Generate changelog
      id: changelog
      run: |
        echo "ðŸ“‹ Generating changelog..."
        
        # Get latest tag or use initial commit
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$LATEST_TAG" ]; then
          echo "No previous tags found. Including all commits."
          git log --oneline --pretty=format:"- %s" > changelog.md
        else
          echo "Changes since $LATEST_TAG:"
          git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD > changelog.md
        fi
        
        # Count changes for summary
        CHANGE_COUNT=$(wc -l < changelog.md | tr -d ' ')
        echo "change_count=$CHANGE_COUNT" >> $GITHUB_OUTPUT
        
        echo "Changelog generated with $CHANGE_COUNT changes"
        cat changelog.md
    
    - name: Upload changelog artifact
      uses: actions/upload-artifact@v4
      with:
        name: changelog
        path: changelog.md
        retention-days: 1

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: release-prep
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download changelog artifact
      uses: actions/download-artifact@v4
      with:
        name: changelog
        path: ./
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: Release v1.0.${{ github.run_number }}
        body: |
          # ðŸš€ Automated Release v1.0.${{ github.run_number }}
          
          ## Changes in this release:
          
          $(cat changelog.md)
          
          ---
          *Automatically generated by GitHub Actions on $(date -u)*
        draft: false
        prerelease: false
        generate_release_notes: true

  post-release:
    name: Post Release Tasks
    runs-on: ubuntu-latest
    needs: create-release
    if: always()
    
    steps:
    - name: Generate release summary
      run: |
        echo "ðŸŽ‰ Release Summary" > release-summary.md
        echo "=================" >> release-summary.md
        echo "" >> release-summary.md
        echo "**Release**: v1.0.${{ github.run_number }}" >> release-summary.md
        echo "**Status**: ${{ job.status }}" >> release-summary.md
        echo "**Timestamp**: $(date -u)" >> release-summary.md
        echo "" >> release-summary.md
        echo "Release workflow completed successfully!" >> release-summary.md
        
        cat release-summary.md
    
    - name: Upload release summary
      uses: actions/upload-artifact@v4
      with:
        name: release-summary
        path: release-summary.md
        retention-days: 30
